// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`should create default configuration 1`] = `
[
  {
    "name": "jimmy.codes/base",
    "rules": {
      "arrow-body-style": [
        "error",
        "always",
      ],
      "constructor-super": "error",
      "curly": "error",
      "for-direction": "error",
      "getter-return": "error",
      "no-async-promise-executor": "error",
      "no-case-declarations": "error",
      "no-class-assign": "error",
      "no-compare-neg-zero": "error",
      "no-cond-assign": "error",
      "no-const-assign": "error",
      "no-constant-condition": "error",
      "no-control-regex": "error",
      "no-debugger": "error",
      "no-delete-var": "error",
      "no-dupe-args": "error",
      "no-dupe-class-members": "error",
      "no-dupe-else-if": "error",
      "no-dupe-keys": "error",
      "no-duplicate-case": "error",
      "no-empty": "error",
      "no-empty-character-class": "error",
      "no-empty-pattern": "error",
      "no-ex-assign": "error",
      "no-extra-boolean-cast": "error",
      "no-extra-semi": "error",
      "no-fallthrough": "error",
      "no-func-assign": "error",
      "no-global-assign": "error",
      "no-import-assign": "error",
      "no-inner-declarations": "error",
      "no-invalid-regexp": "error",
      "no-irregular-whitespace": "error",
      "no-loss-of-precision": "error",
      "no-misleading-character-class": "error",
      "no-mixed-spaces-and-tabs": "error",
      "no-new-symbol": "error",
      "no-nonoctal-decimal-escape": "error",
      "no-obj-calls": "error",
      "no-octal": "error",
      "no-prototype-builtins": "error",
      "no-redeclare": "error",
      "no-regex-spaces": "error",
      "no-self-assign": "error",
      "no-setter-return": "error",
      "no-shadow-restricted-names": "error",
      "no-sparse-arrays": "error",
      "no-this-before-super": "error",
      "no-undef": "error",
      "no-unexpected-multiline": "error",
      "no-unreachable": "error",
      "no-unsafe-finally": "error",
      "no-unsafe-negation": "error",
      "no-unsafe-optional-chaining": "error",
      "no-unused-labels": "error",
      "no-unused-vars": "error",
      "no-useless-backreference": "error",
      "no-useless-catch": "error",
      "no-useless-escape": "error",
      "no-with": "error",
      "object-shorthand": "error",
      "prefer-arrow-callback": "error",
      "require-yield": "error",
      "use-isnan": "error",
      "valid-typeof": "error",
    },
  },
  {
    "name": "jimmy.codes/imports",
    "plugins": {
      "import-x": {
        "configs": {
          "electron": {
            "settings": {
              "import-x/core-modules": [
                "electron",
              ],
            },
          },
          "errors": {
            "plugins": [
              "import-x",
            ],
            "rules": {
              "import-x/default": 2,
              "import-x/export": 2,
              "import-x/named": 2,
              "import-x/namespace": 2,
              "import-x/no-unresolved": 2,
            },
          },
          "react": {
            "parserOptions": {
              "ecmaFeatures": {
                "jsx": true,
              },
            },
            "settings": {
              "import-x/extensions": [
                ".js",
                ".jsx",
              ],
            },
          },
          "react-native": {
            "settings": {
              "import-x/resolver": {
                "node": {
                  "extensions": [
                    ".js",
                    ".web.js",
                    ".ios.js",
                    ".android.js",
                  ],
                },
              },
            },
          },
          "recommended": {
            "parserOptions": {
              "ecmaVersion": 2018,
              "sourceType": "module",
            },
            "plugins": [
              "import-x",
            ],
            "rules": {
              "import-x/default": "error",
              "import-x/export": "error",
              "import-x/named": "error",
              "import-x/namespace": "error",
              "import-x/no-duplicates": "warn",
              "import-x/no-named-as-default": "warn",
              "import-x/no-named-as-default-member": "warn",
              "import-x/no-unresolved": "error",
            },
          },
          "stage-0": {
            "plugins": [
              "import-x",
            ],
            "rules": {
              "import-x/no-deprecated": 1,
            },
          },
          "typescript": {
            "rules": {
              "import-x/named": "off",
            },
            "settings": {
              "import-x/extensions": [
                ".ts",
                ".tsx",
                ".js",
                ".jsx",
              ],
              "import-x/external-module-folders": [
                "node_modules",
                "node_modules/@types",
              ],
              "import-x/parsers": {
                "@typescript-eslint/parser": [
                  ".ts",
                  ".tsx",
                  ".cts",
                  ".mts",
                ],
              },
              "import-x/resolver": {
                "node": {
                  "extensions": [
                    ".ts",
                    ".tsx",
                    ".js",
                    ".jsx",
                  ],
                },
              },
            },
          },
          "warnings": {
            "plugins": [
              "import-x",
            ],
            "rules": {
              "import-x/no-duplicates": 1,
              "import-x/no-named-as-default": 1,
              "import-x/no-named-as-default-member": 1,
            },
          },
        },
        "rules": {
          "consistent-type-specifier-style": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Style guide",
                "description": "Enforce or ban the use of inline type-only markers for named imports.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/consistent-type-specifier-style.md",
              },
              "fixable": "code",
              "messages": {
                "inline": "Prefer using inline {{kind}} specifiers instead of a top-level {{kind}}-only import.",
                "topLevel": "Prefer using a top-level {{kind}}-only import instead of inline {{kind}} specifiers.",
              },
              "schema": [
                {
                  "default": "prefer-inline",
                  "enum": [
                    "prefer-inline",
                    "prefer-top-level",
                  ],
                  "type": "string",
                },
              ],
              "type": "suggestion",
            },
          },
          "default": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Static analysis",
                "description": "Ensure a default export is present, given a default import.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/default.md",
              },
              "messages": {
                "noDefaultExport": "No default export found in imported module "{{module}}".",
              },
              "schema": [],
              "type": "problem",
            },
          },
          "dynamic-import-chunkname": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Style guide",
                "description": "Enforce a leading comment with the webpackChunkName for dynamic imports.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/dynamic-import-chunkname.md",
              },
              "messages": {
                "blockComment": "dynamic imports require a /* foo */ style comment, not a // foo comment",
                "chunknameFormat": "dynamic imports require a leading comment in the form /*{{format}}*/",
                "leadingComment": "dynamic imports require a leading comment with the webpack chunkname",
                "paddedSpaces": "dynamic imports require a block comment padded with spaces - /* foo */",
                "webpackComment": "dynamic imports require a "webpack" comment with valid syntax",
              },
              "schema": [
                {
                  "properties": {
                    "allowEmpty": {
                      "type": "boolean",
                    },
                    "importFunctions": {
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                      "uniqueItems": true,
                    },
                    "webpackChunknameFormat": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "suggestion",
            },
          },
          "export": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Helpful warnings",
                "description": "Forbid any invalid exports, i.e. re-export of the same name.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/export.md",
              },
              "messages": {
                "multiDefault": "Multiple default exports.",
                "multiNamed": "Multiple exports of name '{{name}}'.",
                "noNamed": "No named exports found in module '{{module}}'.",
              },
              "schema": [],
              "type": "problem",
            },
          },
          "exports-last": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Style guide",
                "description": "Ensure all exports appear after other statements.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/exports-last.md",
              },
              "messages": {
                "end": "Export statements should appear at the end of the file",
              },
              "schema": [],
              "type": "suggestion",
            },
          },
          "extensions": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Style guide",
                "description": "Ensure consistent use of file extension within the import path.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/extensions.md",
              },
              "messages": {
                "missing": "Missing file extension {{extension}}for "{{importPath}}"",
                "unexpected": "Unexpected use of file extension "{{extension}}" for "{{importPath}}"",
              },
              "schema": {
                "anyOf": [
                  {
                    "additionalItems": false,
                    "items": [
                      {
                        "enum": [
                          "always",
                          "ignorePackages",
                          "never",
                        ],
                        "type": "string",
                      },
                    ],
                    "type": "array",
                  },
                  {
                    "additionalItems": false,
                    "items": [
                      {
                        "enum": [
                          "always",
                          "ignorePackages",
                          "never",
                        ],
                        "type": "string",
                      },
                      {
                        "properties": {
                          "ignorePackages": {
                            "type": "boolean",
                          },
                          "pattern": {
                            "patternProperties": {
                              ".*": {
                                "enum": [
                                  "always",
                                  "ignorePackages",
                                  "never",
                                ],
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                    "type": "array",
                  },
                  {
                    "additionalItems": false,
                    "items": [
                      {
                        "properties": {
                          "ignorePackages": {
                            "type": "boolean",
                          },
                          "pattern": {
                            "patternProperties": {
                              ".*": {
                                "enum": [
                                  "always",
                                  "ignorePackages",
                                  "never",
                                ],
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                    "type": "array",
                  },
                  {
                    "additionalItems": false,
                    "items": [
                      {
                        "patternProperties": {
                          ".*": {
                            "enum": [
                              "always",
                              "ignorePackages",
                              "never",
                            ],
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                    ],
                    "type": "array",
                  },
                  {
                    "additionalItems": false,
                    "items": [
                      {
                        "enum": [
                          "always",
                          "ignorePackages",
                          "never",
                        ],
                        "type": "string",
                      },
                      {
                        "patternProperties": {
                          ".*": {
                            "enum": [
                              "always",
                              "ignorePackages",
                              "never",
                            ],
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                    ],
                    "type": "array",
                  },
                ],
              },
              "type": "suggestion",
            },
          },
          "first": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Style guide",
                "description": "Ensure all imports appear before other statements.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/first.md",
              },
              "fixable": "code",
              "messages": {
                "absolute": "Absolute imports should come before relative imports.",
                "order": "Import in body of module; reorder to top.",
              },
              "schema": [
                {
                  "enum": [
                    "absolute-first",
                    "disable-absolute-first",
                  ],
                  "type": "string",
                },
              ],
              "type": "suggestion",
            },
          },
          "group-exports": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Style guide",
                "description": "Prefer named exports to be grouped together in a single export declaration.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/group-exports.md",
              },
              "messages": {
                "AssignmentExpression": "Multiple CommonJS exports; consolidate all exports into a single assignment to \`module.exports\`",
                "ExportNamedDeclaration": "Multiple named export declarations; consolidate all named exports into a single export declaration",
              },
              "schema": [],
              "type": "suggestion",
            },
          },
          "imports-first": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "deprecated": true,
              "docs": {
                "category": "Style guide",
                "description": "Replaced by \`import-x/first\`.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/7b25c1cb95ee18acc1531002fd343e1e6031f9ed/docs/rules/imports-first.md",
              },
              "fixable": "code",
              "messages": {
                "absolute": "Absolute imports should come before relative imports.",
                "order": "Import in body of module; reorder to top.",
              },
              "schema": [
                {
                  "enum": [
                    "absolute-first",
                    "disable-absolute-first",
                  ],
                  "type": "string",
                },
              ],
              "type": "suggestion",
            },
          },
          "max-dependencies": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Style guide",
                "description": "Enforce the maximum number of dependencies a module can have.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/max-dependencies.md",
              },
              "messages": {
                "max": "Maximum number of dependencies ({{max}}) exceeded.",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "ignoreTypeImports": {
                      "type": "boolean",
                    },
                    "max": {
                      "type": "number",
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "suggestion",
            },
          },
          "named": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Static analysis",
                "description": "Ensure named imports correspond to a named export in the remote file.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/named.md",
              },
              "messages": {
                "notFound": "{{name}} not found in '{{path}}'",
                "notFoundDeep": "{{name}} not found via {{deepPath}}",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "commonjs": {
                      "type": "boolean",
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "problem",
            },
          },
          "namespace": {
            "create": [Function],
            "defaultOptions": [
              {
                "allowComputed": false,
              },
            ],
            "meta": {
              "docs": {
                "category": "Static analysis",
                "description": "Ensure imported namespaces contain dereferenced properties as they are dereferenced.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/namespace.md",
              },
              "messages": {
                "computedReference": "Unable to validate computed reference to imported namespace '{{namespace}}'.",
                "namespaceMember": "Assignment to member of namespace '{{namespace}}'.",
                "noNamesFound": "No exported names found in module '{{module}}'.",
                "notFoundInNamespace": "'{{name}}' not found in {{depth}}imported namespace '{{namepath}}'.",
                "topLevelNames": "Only destructure top-level names.",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "allowComputed": {
                      "default": false,
                      "description": "If \`false\`, will report computed (and thus, un-lintable) references to namespace members.",
                      "type": "boolean",
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "problem",
            },
          },
          "newline-after-import": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Style guide",
                "description": "Enforce a newline after import statements.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/newline-after-import.md",
              },
              "fixable": "whitespace",
              "messages": {
                "newline": "Expected {{count}} empty line{{lineSuffix}} after {{type}} statement not followed by another {{type}}.",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "considerComments": {
                      "type": "boolean",
                    },
                    "count": {
                      "minimum": 1,
                      "type": "integer",
                    },
                    "exactCount": {
                      "type": "boolean",
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "layout",
            },
          },
          "no-absolute-path": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Static analysis",
                "description": "Forbid import of modules using absolute paths.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-absolute-path.md",
              },
              "fixable": "code",
              "messages": {
                "absolute": "Do not import modules using an absolute path",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "amd": {
                      "type": "boolean",
                    },
                    "commonjs": {
                      "type": "boolean",
                    },
                    "esmodule": {
                      "type": "boolean",
                    },
                    "ignore": {
                      "items": {
                        "type": "string",
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true,
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "suggestion",
            },
          },
          "no-amd": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Module systems",
                "description": "Forbid AMD \`require\` and \`define\` calls.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-amd.md",
              },
              "messages": {
                "amd": "Expected imports instead of AMD {{type}}().",
              },
              "schema": [],
              "type": "suggestion",
            },
          },
          "no-anonymous-default-export": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Style guide",
                "description": "Forbid anonymous values as default exports.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-anonymous-default-export.md",
              },
              "messages": {
                "anonymous": "Unexpected default export of anonymous {{type}}",
                "assign": "Assign {{type}} to a variable before exporting as module default",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "allowAnonymousClass": {
                      "description": "If \`false\`, will report default export of an anonymous class",
                      "type": "boolean",
                    },
                    "allowAnonymousFunction": {
                      "description": "If \`false\`, will report default export of an anonymous function",
                      "type": "boolean",
                    },
                    "allowArray": {
                      "description": "If \`false\`, will report default export of an array",
                      "type": "boolean",
                    },
                    "allowArrowFunction": {
                      "description": "If \`false\`, will report default export of an arrow function",
                      "type": "boolean",
                    },
                    "allowCallExpression": {
                      "description": "If \`false\`, will report default export of a function call",
                      "type": "boolean",
                    },
                    "allowLiteral": {
                      "description": "If \`false\`, will report default export of a literal",
                      "type": "boolean",
                    },
                    "allowNew": {
                      "description": "If \`false\`, will report default export of a class instantiation",
                      "type": "boolean",
                    },
                    "allowObject": {
                      "description": "If \`false\`, will report default export of an object expression",
                      "type": "boolean",
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "suggestion",
            },
          },
          "no-commonjs": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Module systems",
                "description": "Forbid CommonJS \`require\` calls and \`module.exports\` or \`exports.*\`.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-commonjs.md",
              },
              "messages": {
                "export": "Expected "export" or "export default"",
                "import": "Expected "import" instead of "require()"",
              },
              "schema": {
                "anyOf": [
                  {
                    "additionalItems": false,
                    "items": [
                      {
                        "enum": [
                          "allow-primitive-modules",
                        ],
                        "type": "string",
                      },
                    ],
                    "type": "array",
                  },
                  {
                    "additionalItems": false,
                    "items": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "allowConditionalRequire": {
                            "type": "boolean",
                          },
                          "allowPrimitiveModules": {
                            "type": "boolean",
                          },
                          "allowRequire": {
                            "type": "boolean",
                          },
                        },
                        "type": "object",
                      },
                    ],
                    "type": "array",
                  },
                ],
              },
              "type": "suggestion",
            },
          },
          "no-cycle": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Static analysis",
                "description": "Forbid a module from importing a module with a dependency path back to itself.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-cycle.md",
              },
              "messages": {
                "cycle": "Dependency cycle {{source}}",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "allowUnsafeDynamicCyclicDependency": {
                      "default": false,
                      "description": "Allow cyclic dependency if there is at least one dynamic import in the chain",
                      "type": "boolean",
                    },
                    "amd": {
                      "type": "boolean",
                    },
                    "commonjs": {
                      "type": "boolean",
                    },
                    "esmodule": {
                      "type": "boolean",
                    },
                    "ignore": {
                      "items": {
                        "type": "string",
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true,
                    },
                    "ignoreExternal": {
                      "default": false,
                      "description": "ignore external modules",
                      "type": "boolean",
                    },
                    "maxDepth": {
                      "anyOf": [
                        {
                          "description": "maximum dependency depth to traverse",
                          "minimum": 1,
                          "type": "integer",
                        },
                        {
                          "enum": [
                            "∞",
                          ],
                          "type": "string",
                        },
                      ],
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "suggestion",
            },
          },
          "no-default-export": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Style guide",
                "description": "Forbid default exports.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-default-export.md",
              },
              "messages": {
                "noAliasDefault": "Do not alias \`{{local}}\` as \`default\`. Just export \`{{local}}\` itself instead.",
                "preferNamed": "Prefer named exports.",
              },
              "schema": [],
              "type": "suggestion",
            },
          },
          "no-deprecated": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Helpful warnings",
                "description": "Forbid imported names marked with \`@deprecated\` documentation tag.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-deprecated.md",
              },
              "messages": {
                "deprecated": "Deprecated{{description}}",
              },
              "schema": [],
              "type": "suggestion",
            },
          },
          "no-duplicates": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Style guide",
                "description": "Forbid repeated import of the same module in multiple places.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-duplicates.md",
              },
              "fixable": "code",
              "messages": {
                "duplicate": "'{{module}}' imported multiple times.",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "considerQueryString": {
                      "type": "boolean",
                    },
                    "prefer-inline": {
                      "type": "boolean",
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "problem",
            },
          },
          "no-dynamic-require": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Static analysis",
                "description": "Forbid \`require()\` calls with expressions.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-dynamic-require.md",
              },
              "messages": {
                "import": "Calls to import() should use string literals",
                "require": "Calls to require() should use string literals",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "esmodule": {
                      "type": "boolean",
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "suggestion",
            },
          },
          "no-empty-named-blocks": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Helpful warnings",
                "description": "Forbid empty named import blocks.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-empty-named-blocks.md",
              },
              "fixable": "code",
              "hasSuggestions": true,
              "messages": {
                "emptyImport": "Remove empty import block",
                "emptyNamed": "Unexpected empty named import block",
                "unused": "Remove unused import",
              },
              "schema": [],
              "type": "suggestion",
            },
          },
          "no-extraneous-dependencies": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Helpful warnings",
                "description": "Forbid the use of extraneous packages.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-extraneous-dependencies.md",
              },
              "messages": {
                "devDep": "'{{packageName}}' should be listed in the project's dependencies, not devDependencies.",
                "missing": "'{{packageName}}' should be listed in the project's dependencies. Run 'npm i -S {{packageName}}' to add it",
                "optDep": "'{{packageName}}' should be listed in the project's dependencies, not optionalDependencies.",
                "pkgNotFound": "The package.json file could not be found.",
                "pkgUnparsable": "The package.json file could not be parsed: {{error}}",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "bundledDependencies": {
                      "type": [
                        "boolean",
                        "array",
                      ],
                    },
                    "devDependencies": {
                      "type": [
                        "boolean",
                        "array",
                      ],
                    },
                    "includeInternal": {
                      "type": [
                        "boolean",
                      ],
                    },
                    "includeTypes": {
                      "type": [
                        "boolean",
                      ],
                    },
                    "optionalDependencies": {
                      "type": [
                        "boolean",
                        "array",
                      ],
                    },
                    "packageDir": {
                      "type": [
                        "string",
                        "array",
                      ],
                    },
                    "peerDependencies": {
                      "type": [
                        "boolean",
                        "array",
                      ],
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "problem",
            },
          },
          "no-import-module-exports": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Module systems",
                "description": "Forbid import statements with CommonJS module.exports.",
                "recommended": true,
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-import-module-exports.md",
              },
              "fixable": "code",
              "messages": {
                "notAllowed": "Cannot use import declarations in modules that export using CommonJS (module.exports = 'foo' or exports.bar = 'hi')",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "exceptions": {
                      "type": "array",
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "problem",
            },
          },
          "no-internal-modules": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Static analysis",
                "description": "Forbid importing the submodules of other modules.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-internal-modules.md",
              },
              "messages": {
                "noAllowed": "Reaching to "{{importPath}}" is not allowed.",
              },
              "schema": [
                {
                  "anyOf": [
                    {
                      "additionalProperties": false,
                      "properties": {
                        "allow": {
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                        },
                      },
                      "type": "object",
                    },
                    {
                      "additionalProperties": false,
                      "properties": {
                        "forbid": {
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                        },
                      },
                      "type": "object",
                    },
                  ],
                },
              ],
              "type": "suggestion",
            },
          },
          "no-mutable-exports": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Helpful warnings",
                "description": "Forbid the use of mutable exports with \`var\` or \`let\`.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-mutable-exports.md",
              },
              "messages": {
                "noMutable": "Exporting mutable '{{kind}}' binding, use 'const' instead.",
              },
              "schema": [],
              "type": "suggestion",
            },
          },
          "no-named-as-default": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Helpful warnings",
                "description": "Forbid use of exported name as identifier of default export.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-named-as-default.md",
              },
              "messages": {
                "default": "Using exported name '{{name}}' as identifier for default export.",
              },
              "schema": [],
              "type": "problem",
            },
          },
          "no-named-as-default-member": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Helpful warnings",
                "description": "Forbid use of exported name as property of default export.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-named-as-default-member.md",
              },
              "messages": {
                "member": "Caution: \`{{objectName}}\` also has a named export \`{{propName}}\`. Check if you meant to write \`import {{{propName}}} from '{{sourcePath}}'\` instead.",
              },
              "schema": [],
              "type": "suggestion",
            },
          },
          "no-named-default": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Style guide",
                "description": "Forbid named default exports.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-named-default.md",
              },
              "messages": {
                "default": "Use default import syntax to import '{{importName}}'.",
              },
              "schema": [],
              "type": "suggestion",
            },
          },
          "no-named-export": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Style guide",
                "description": "Forbid named exports.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-named-export.md",
              },
              "messages": {
                "noAllowed": "Named exports are not allowed.",
              },
              "schema": [],
              "type": "suggestion",
            },
          },
          "no-namespace": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Style guide",
                "description": "Forbid namespace (a.k.a. "wildcard" \`*\`) imports.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-namespace.md",
              },
              "fixable": "code",
              "messages": {
                "noNamespace": "Unexpected namespace import.",
              },
              "schema": [
                {
                  "properties": {
                    "ignore": {
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                      "uniqueItems": true,
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "suggestion",
            },
          },
          "no-nodejs-modules": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Module systems",
                "description": "Forbid Node.js builtin modules.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-nodejs-modules.md",
              },
              "messages": {
                "builtin": "Do not import Node.js builtin module "{{moduleName}}"",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "allow": {
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                      "uniqueItems": true,
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "suggestion",
            },
          },
          "no-relative-packages": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Static analysis",
                "description": "Forbid importing packages through relative paths.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-relative-packages.md",
              },
              "fixable": "code",
              "messages": {
                "noAllowed": "Relative import from another package is not allowed. Use \`{{properImport}}\` instead of \`{{importPath}}\`",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "amd": {
                      "type": "boolean",
                    },
                    "commonjs": {
                      "type": "boolean",
                    },
                    "esmodule": {
                      "type": "boolean",
                    },
                    "ignore": {
                      "items": {
                        "type": "string",
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true,
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "suggestion",
            },
          },
          "no-relative-parent-imports": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Static analysis",
                "description": "Forbid importing modules from parent directories.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-relative-parent-imports.md",
              },
              "messages": {
                "noAllowed": "Relative imports from parent directories are not allowed. Please either pass what you're importing through at runtime (dependency injection), move \`{{filename}}\` to same directory as \`{{depPath}}\` or consider making \`{{depPath}}\` a package.",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "amd": {
                      "type": "boolean",
                    },
                    "commonjs": {
                      "type": "boolean",
                    },
                    "esmodule": {
                      "type": "boolean",
                    },
                    "ignore": {
                      "items": {
                        "type": "string",
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true,
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "suggestion",
            },
          },
          "no-restricted-paths": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Static analysis",
                "description": "Enforce which files can be imported in a given folder.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-restricted-paths.md",
              },
              "messages": {
                "glob": "Restricted path exceptions must be glob patterns when \`from\` contains glob patterns",
                "mixedGlob": "Restricted path \`from\` must contain either only glob patterns or none",
                "path": "Restricted path exceptions must be descendants of the configured \`from\` path for that zone.",
                "zone": "Unexpected path "{{importPath}}" imported in restricted zone.{{extra}}",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "basePath": {
                      "type": "string",
                    },
                    "zones": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "except": {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "uniqueItems": true,
                          },
                          "from": {
                            "anyOf": [
                              {
                                "type": "string",
                              },
                              {
                                "items": {
                                  "type": "string",
                                },
                                "minItems": 1,
                                "type": "array",
                                "uniqueItems": true,
                              },
                            ],
                          },
                          "message": {
                            "type": "string",
                          },
                          "target": {
                            "anyOf": [
                              {
                                "type": "string",
                              },
                              {
                                "items": {
                                  "type": "string",
                                },
                                "minItems": 1,
                                "type": "array",
                                "uniqueItems": true,
                              },
                            ],
                          },
                        },
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "problem",
            },
          },
          "no-self-import": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Static analysis",
                "description": "Forbid a module from importing itself.",
                "recommended": true,
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-self-import.md",
              },
              "messages": {
                "self": "Module imports itself.",
              },
              "schema": [],
              "type": "problem",
            },
          },
          "no-unassigned-import": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Style guide",
                "description": "Forbid unassigned imports.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-unassigned-import.md",
              },
              "messages": {
                "unassigned": "Imported module should be assigned",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "allow": {
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                    },
                    "devDependencies": {
                      "type": [
                        "boolean",
                        "array",
                      ],
                    },
                    "optionalDependencies": {
                      "type": [
                        "boolean",
                        "array",
                      ],
                    },
                    "peerDependencies": {
                      "type": [
                        "boolean",
                        "array",
                      ],
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "suggestion",
            },
          },
          "no-unresolved": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Static analysis",
                "description": "Ensure imports point to a file/module that can be resolved.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-unresolved.md",
              },
              "messages": {
                "casingMismatch": "Casing of {{module}} does not match the underlying filesystem.",
                "unresolved": "Unable to resolve path to module '{{module}}'.",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "amd": {
                      "type": "boolean",
                    },
                    "caseSensitive": {
                      "default": true,
                      "type": "boolean",
                    },
                    "caseSensitiveStrict": {
                      "type": "boolean",
                    },
                    "commonjs": {
                      "type": "boolean",
                    },
                    "esmodule": {
                      "type": "boolean",
                    },
                    "ignore": {
                      "items": {
                        "type": "string",
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true,
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "problem",
            },
          },
          "no-unused-modules": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Helpful warnings",
                "description": "Forbid modules without exports, or exports without matching import in another module.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-unused-modules.md",
              },
              "messages": {
                "notFound": "No exports found",
                "unused": "exported declaration '{{value}}' not used within other modules",
              },
              "schema": [
                {
                  "anyOf": [
                    {
                      "properties": {
                        "src": {
                          "minItems": 1,
                          "type": "array",
                        },
                        "unusedExports": {
                          "enum": [
                            true,
                          ],
                          "type": "boolean",
                        },
                      },
                      "required": [
                        "unusedExports",
                      ],
                      "type": "object",
                    },
                    {
                      "properties": {
                        "missingExports": {
                          "enum": [
                            true,
                          ],
                          "type": "boolean",
                        },
                      },
                      "required": [
                        "missingExports",
                      ],
                      "type": "object",
                    },
                  ],
                  "properties": {
                    "ignoreExports": {
                      "description": "files/paths for which unused exports will not be reported (e.g module entry points)",
                      "items": {
                        "minLength": 1,
                        "type": "string",
                      },
                      "type": "array",
                      "uniqueItems": true,
                    },
                    "missingExports": {
                      "description": "report modules without any exports",
                      "type": "boolean",
                    },
                    "src": {
                      "description": "files/paths to be analyzed (only for unused exports)",
                      "items": {
                        "minLength": 1,
                        "type": "string",
                      },
                      "type": "array",
                      "uniqueItems": true,
                    },
                    "unusedExports": {
                      "description": "report exports without any usage",
                      "type": "boolean",
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "suggestion",
            },
          },
          "no-useless-path-segments": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Static analysis",
                "description": "Forbid unnecessary path segments in import and require statements.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-useless-path-segments.md",
              },
              "fixable": "code",
              "messages": {
                "useless": "Useless path segments for "{{importPath}}", should be "{{proposedPath}}"",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "commonjs": {
                      "type": "boolean",
                    },
                    "noUselessIndex": {
                      "type": "boolean",
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "suggestion",
            },
          },
          "no-webpack-loader-syntax": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Static analysis",
                "description": "Forbid webpack loader syntax in imports.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/no-webpack-loader-syntax.md",
              },
              "messages": {
                "unexpected": "Unexpected '!' in '{{name}}'. Do not use import syntax to configure webpack loaders.",
              },
              "schema": [],
              "type": "problem",
            },
          },
          "order": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Style guide",
                "description": "Enforce a convention in module import order.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/order.md",
              },
              "fixable": "code",
              "messages": {
                "error": "{{error}}",
                "noLineBetweenGroups": "There should be no empty line between import groups",
                "noLineWithinGroup": "There should be no empty line within import group",
                "oneLineBetweenGroups": "There should be at least one empty line between import groups",
                "order": "{{secondImport}} should occur {{order}} {{firstImport}}",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "alphabetize": {
                      "additionalProperties": false,
                      "properties": {
                        "caseInsensitive": {
                          "default": false,
                          "type": "boolean",
                        },
                        "order": {
                          "default": "ignore",
                          "enum": [
                            "ignore",
                            "asc",
                            "desc",
                          ],
                          "type": "string",
                        },
                        "orderImportKind": {
                          "default": "ignore",
                          "enum": [
                            "ignore",
                            "asc",
                            "desc",
                          ],
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                    "distinctGroup": {
                      "default": true,
                      "type": "boolean",
                    },
                    "groups": {
                      "type": "array",
                    },
                    "newlines-between": {
                      "enum": [
                        "ignore",
                        "always",
                        "always-and-inside-groups",
                        "never",
                      ],
                      "type": "string",
                    },
                    "pathGroups": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "group": {
                            "enum": [
                              "builtin",
                              "external",
                              "internal",
                              "unknown",
                              "parent",
                              "sibling",
                              "index",
                              "object",
                              "type",
                            ],
                            "type": "string",
                          },
                          "pattern": {
                            "type": "string",
                          },
                          "patternOptions": {
                            "type": "object",
                          },
                          "position": {
                            "enum": [
                              "after",
                              "before",
                            ],
                            "type": "string",
                          },
                        },
                        "required": [
                          "pattern",
                          "group",
                        ],
                        "type": "object",
                      },
                      "type": "array",
                    },
                    "pathGroupsExcludedImportTypes": {
                      "type": "array",
                    },
                    "warnOnUnassignedImports": {
                      "default": false,
                      "type": "boolean",
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "suggestion",
            },
          },
          "prefer-default-export": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Style guide",
                "description": "Prefer a default export if module exports a single name or multiple names.",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/prefer-default-export.md",
              },
              "messages": {
                "any": "Prefer default export to be present on every file that has export.",
                "single": "Prefer default export on a file with single export.",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "target": {
                      "default": "single",
                      "enum": [
                        "single",
                        "any",
                      ],
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "suggestion",
            },
          },
          "unambiguous": {
            "create": [Function],
            "defaultOptions": [],
            "meta": {
              "docs": {
                "category": "Module systems",
                "description": "Forbid potentially ambiguous parse goal (\`script\` vs. \`module\`).",
                "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v0.5.0/docs/rules/unambiguous.md",
              },
              "messages": {
                "module": "This module could be parsed as a valid script.",
              },
              "schema": [],
              "type": "suggestion",
            },
          },
        },
      },
      "node-import": {
        "rules": {
          "prefer-node-protocol": {
            "create": [Function],
            "meta": {
              "docs": {
                "description": "Prefer using the \`node:\` protocol when importing Node.js builtin modules.",
                "recommended": true,
                "url": "https://github.com/kytta/eslint-plugin-node-import/blob/main/docs/rules/prefer-node-protocol",
              },
              "fixable": "code",
              "messages": {
                "prefer-node-protocol": "Consider using \`node:{{ moduleName }}\` over \`{{ moduleName }}\`.",
              },
              "schema": [],
              "type": "problem",
            },
          },
        },
      },
      "simple-import-sort": {
        "meta": {
          "name": "eslint-plugin-simple-import-sort",
          "version": "12.0.0",
        },
        "rules": {
          "exports": {
            "create": [Function],
            "meta": {
              "docs": {
                "url": "https://github.com/lydell/eslint-plugin-simple-import-sort#sort-order",
              },
              "fixable": "code",
              "messages": {
                "sort": "Run autofix to sort these exports!",
              },
              "schema": [],
              "type": "layout",
            },
          },
          "imports": {
            "create": [Function],
            "meta": {
              "docs": {
                "url": "https://github.com/lydell/eslint-plugin-simple-import-sort#sort-order",
              },
              "fixable": "code",
              "messages": {
                "sort": "Run autofix to sort these imports!",
              },
              "schema": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "groups": {
                      "items": {
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "type": "array",
                    },
                  },
                  "type": "object",
                },
              ],
              "type": "layout",
            },
          },
        },
      },
    },
    "rules": {
      "import-x/default": "error",
      "import-x/export": "error",
      "import-x/first": "error",
      "import-x/named": "error",
      "import-x/namespace": "off",
      "import-x/newline-after-import": "error",
      "import-x/no-absolute-path": "error",
      "import-x/no-duplicates": "warn",
      "import-x/no-empty-named-blocks": "error",
      "import-x/no-named-as-default": "warn",
      "import-x/no-named-as-default-member": "warn",
      "import-x/no-self-import": "error",
      "import-x/no-unresolved": "error",
      "import-x/no-useless-path-segments": "error",
      "node-import/prefer-node-protocol": "error",
      "simple-import-sort/exports": "error",
      "simple-import-sort/imports": "error",
    },
  },
  {
    "name": "jimmy.codes/disabled",
    "rules": {
      "@babel/object-curly-spacing": "off",
      "@babel/semi": "off",
      "@typescript-eslint/block-spacing": "off",
      "@typescript-eslint/brace-style": "off",
      "@typescript-eslint/comma-dangle": "off",
      "@typescript-eslint/comma-spacing": "off",
      "@typescript-eslint/func-call-spacing": "off",
      "@typescript-eslint/indent": "off",
      "@typescript-eslint/key-spacing": "off",
      "@typescript-eslint/keyword-spacing": "off",
      "@typescript-eslint/lines-around-comment": 0,
      "@typescript-eslint/member-delimiter-style": "off",
      "@typescript-eslint/no-extra-parens": "off",
      "@typescript-eslint/no-extra-semi": "off",
      "@typescript-eslint/object-curly-spacing": "off",
      "@typescript-eslint/quotes": 0,
      "@typescript-eslint/semi": "off",
      "@typescript-eslint/space-before-blocks": "off",
      "@typescript-eslint/space-before-function-paren": "off",
      "@typescript-eslint/space-infix-ops": "off",
      "@typescript-eslint/type-annotation-spacing": "off",
      "array-bracket-newline": "off",
      "array-bracket-spacing": "off",
      "array-element-newline": "off",
      "arrow-parens": "off",
      "arrow-spacing": "off",
      "babel/object-curly-spacing": "off",
      "babel/quotes": 0,
      "babel/semi": "off",
      "block-spacing": "off",
      "brace-style": "off",
      "comma-dangle": "off",
      "comma-spacing": "off",
      "comma-style": "off",
      "computed-property-spacing": "off",
      "curly": 0,
      "dot-location": "off",
      "eol-last": "off",
      "flowtype/boolean-style": "off",
      "flowtype/delimiter-dangle": "off",
      "flowtype/generic-spacing": "off",
      "flowtype/object-type-curly-spacing": "off",
      "flowtype/object-type-delimiter": "off",
      "flowtype/quotes": "off",
      "flowtype/semi": "off",
      "flowtype/space-after-type-colon": "off",
      "flowtype/space-before-generic-bracket": "off",
      "flowtype/space-before-type-colon": "off",
      "flowtype/union-intersection-spacing": "off",
      "func-call-spacing": "off",
      "function-call-argument-newline": "off",
      "function-paren-newline": "off",
      "generator-star": "off",
      "generator-star-spacing": "off",
      "implicit-arrow-linebreak": "off",
      "indent": "off",
      "indent-legacy": "off",
      "jsx-quotes": "off",
      "key-spacing": "off",
      "keyword-spacing": "off",
      "linebreak-style": "off",
      "lines-around-comment": 0,
      "max-len": 0,
      "max-statements-per-line": "off",
      "multiline-ternary": "off",
      "new-parens": "off",
      "newline-per-chained-call": "off",
      "no-arrow-condition": "off",
      "no-comma-dangle": "off",
      "no-confusing-arrow": 0,
      "no-extra-parens": "off",
      "no-extra-semi": "off",
      "no-floating-decimal": "off",
      "no-mixed-operators": 0,
      "no-mixed-spaces-and-tabs": "off",
      "no-multi-spaces": "off",
      "no-multiple-empty-lines": "off",
      "no-reserved-keys": "off",
      "no-space-before-semi": "off",
      "no-spaced-func": "off",
      "no-tabs": 0,
      "no-trailing-spaces": "off",
      "no-unexpected-multiline": 0,
      "no-whitespace-before-property": "off",
      "no-wrap-func": "off",
      "nonblock-statement-body-position": "off",
      "object-curly-newline": "off",
      "object-curly-spacing": "off",
      "object-property-newline": "off",
      "one-var-declaration-per-line": "off",
      "operator-linebreak": "off",
      "padded-blocks": "off",
      "quote-props": "off",
      "quotes": 0,
      "react/jsx-child-element-spacing": "off",
      "react/jsx-closing-bracket-location": "off",
      "react/jsx-closing-tag-location": "off",
      "react/jsx-curly-newline": "off",
      "react/jsx-curly-spacing": "off",
      "react/jsx-equals-spacing": "off",
      "react/jsx-first-prop-new-line": "off",
      "react/jsx-indent": "off",
      "react/jsx-indent-props": "off",
      "react/jsx-max-props-per-line": "off",
      "react/jsx-newline": "off",
      "react/jsx-one-expression-per-line": "off",
      "react/jsx-props-no-multi-spaces": "off",
      "react/jsx-space-before-closing": "off",
      "react/jsx-tag-spacing": "off",
      "react/jsx-wrap-multilines": "off",
      "rest-spread-spacing": "off",
      "semi": "off",
      "semi-spacing": "off",
      "semi-style": "off",
      "space-after-function-name": "off",
      "space-after-keywords": "off",
      "space-before-blocks": "off",
      "space-before-function-paren": "off",
      "space-before-function-parentheses": "off",
      "space-before-keywords": "off",
      "space-in-brackets": "off",
      "space-in-parens": "off",
      "space-infix-ops": "off",
      "space-return-throw-case": "off",
      "space-unary-ops": "off",
      "space-unary-word-ops": "off",
      "standard/array-bracket-even-spacing": "off",
      "standard/computed-property-even-spacing": "off",
      "standard/object-curly-even-spacing": "off",
      "switch-colon-spacing": "off",
      "template-curly-spacing": "off",
      "template-tag-spacing": "off",
      "unicorn/empty-brace-spaces": "off",
      "unicorn/no-nested-ternary": "off",
      "unicorn/number-literal-case": "off",
      "unicorn/template-indent": 0,
      "vue/array-bracket-newline": "off",
      "vue/array-bracket-spacing": "off",
      "vue/array-element-newline": "off",
      "vue/arrow-spacing": "off",
      "vue/block-spacing": "off",
      "vue/block-tag-newline": "off",
      "vue/brace-style": "off",
      "vue/comma-dangle": "off",
      "vue/comma-spacing": "off",
      "vue/comma-style": "off",
      "vue/dot-location": "off",
      "vue/func-call-spacing": "off",
      "vue/html-closing-bracket-newline": "off",
      "vue/html-closing-bracket-spacing": "off",
      "vue/html-end-tags": "off",
      "vue/html-indent": "off",
      "vue/html-quotes": "off",
      "vue/html-self-closing": 0,
      "vue/key-spacing": "off",
      "vue/keyword-spacing": "off",
      "vue/max-attributes-per-line": "off",
      "vue/max-len": 0,
      "vue/multiline-html-element-content-newline": "off",
      "vue/multiline-ternary": "off",
      "vue/mustache-interpolation-spacing": "off",
      "vue/no-extra-parens": "off",
      "vue/no-multi-spaces": "off",
      "vue/no-spaces-around-equal-signs-in-attribute": "off",
      "vue/object-curly-newline": "off",
      "vue/object-curly-spacing": "off",
      "vue/object-property-newline": "off",
      "vue/operator-linebreak": "off",
      "vue/quote-props": "off",
      "vue/script-indent": "off",
      "vue/singleline-html-element-content-newline": "off",
      "vue/space-in-parens": "off",
      "vue/space-infix-ops": "off",
      "vue/space-unary-ops": "off",
      "vue/template-curly-spacing": "off",
      "wrap-iife": "off",
      "wrap-regex": "off",
      "yield-star-spacing": "off",
    },
  },
  {
    "files": [
      "**/*.cjs",
    ],
    "languageOptions": {
      "globals": {
        "exports": true,
        "global": false,
        "module": false,
        "require": false,
      },
    },
    "name": "jimmy.codes/commonjs",
  },
  {
    "ignores": [
      "**/node_modules",
      "**/dist",
      "**/package-lock.json",
      "**/yarn.lock",
      "**/pnpm-lock.yaml",
      "**/bun.lockb",
      "**/output",
      "**/coverage",
      "**/temp",
      "**/.temp",
      "**/tmp",
      "**/.tmp",
      "**/.history",
      "**/.vitepress/cache",
      "**/.nuxt",
      "**/.next",
      "**/.vercel",
      "**/.changeset",
      "**/.idea",
      "**/.cache",
      "**/.output",
      "**/.vite-inspect",
      "**/.yarn",
      "**/storybook-static",
      "**/.eslint-config-inspector",
      "**/CHANGELOG*.md",
      "**/*.min.*",
      "**/LICENSE*",
      "**/__snapshots__",
      "**/auto-import?(s).d.ts",
      "**/components.d.ts",
      "**/vite.config.ts.*.mjs",
    ],
  },
]
`;
